***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer:A programming language is a system of rules for writing instructions that computers can understand and execute.

What is a JDK composed of? Define each component?
Answer:
1.  Java Compiler (javac): Converts Java source code into bytecode that can be executed by the JVM.
2.  Java Virtual Machine (JVM): Executes Java bytecode and provides platform independence and memory management.
3.  Java Runtime Environment (JRE): Includes the JVM and libraries required to run Java applications.
4.  Development Tools: Tools like javac (Java compiler), java (launches Java applications), javadoc (generates HTML documentation), and jar (packs Java files into archives).
What is an IDE?
Answer: An IDE stands for Integrated Development Environment. It is a software application that provides a comprehensive set of tools and features to assist developers in writing, testing, and debugging code
An IDE is a software tool that helps programmers write and manage their code effectively.
What are some of the most popular Java IDEs available in the market?
Answer:
1.	Eclipse
2.	IntelliJ IDEA
3.	NetBeans
4.	Visual Studio Code (VS Code)
5.	JDeveloper
6.	BlueJ
7.	jGRASP
Explain the entire java life cycle.
Answer:
1.	Write Code: using a text editor or an Integrated Development Environment (IDE).
2.	Compile:  using the Java compiler (javac) into bytecode.
3.	Load: The Java Virtual Machine (JVM) loads the bytecode into memory.
4.	Verify: The JVM verifies the bytecode for security.
5.	Execute: The JVM interprets and executes the bytecode instructions line by line.
6.	Garbage Collection: The JVM automatically manages memory by performing garbage collection, which reclaims memory occupied by objects that are no longer in use.
7.	Exception Handling: During execution, if an exception occurs, the JVM catches and handles it according to the exception handling mechanism specified in the code.
8.	Terminate: The program execution ends either when it reaches the end of the main method or when a specific termination condition is met.
What is a class?
Answer:
A class is a blueprint for objects, defining their structure, behavior, and data encapsulation.
What is an object?
Answer:
An object is an instance of a class, representing a specific entity or concept with its own state and behavior.
What is the entry point of a Java project?
Answer:
The entry point of a Java project is the main() method, which is the starting point for program execution.
Why is the main() method static?
Answer:
The main() method is static in Java to allow it to be called without requiring an instance of the class.
Which class is the superclass of all classes?
Answer:
The superclass of all classes in Java is the Object class.
What is difference between path and classpath variables?
Answer:
The "path" variable is used by the operating system to find executables, while the "classpath" variable is used by the JVM to find Java class files.
What is the difference between an Interface and Abstract class?
Answer:
Interface: Collection of abstract methods and constant fields, can be implemented by multiple classes.
Abstract Class: Class with abstract and non-abstract methods, can be extended by a single subclass.
Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: -No, you cannot directly create an object from an interface or an abstract class. You need to create a concrete class that implements or extends them and then instantiate an object of that concrete class.
What is Access Modifier?
Answer:-An access modifier is a keyword in object-oriented programming that specifies the level of accessibility of a class, method, or variable, determining whether it can be accessed or modified by other code within the same program or external code.
What is OOP? Define each OOP concept.
Answer: OOP stands for Object-Oriented Programming, which is a programming paradigm that organizes code around objects, their properties, and their interactions. Here are short definitions of key OOP concepts:
1.	Class: A blueprint.
2.	Object: An instance of a class that encapsulates data and methods to interact with that data.
3.	Inheritance: The ability to create new classes based on existing classes, inheriting their properties and behaviors.
4.	Encapsulation: The bundling of data and methods within an object, hiding internal details and providing an interface for interaction.
5.	Polymorphism: The ability of objects of different classes to respond to the same message or method call in different ways.
6.	Abstraction: The process of simplifying complex systems by breaking them down into smaller, more manageable parts.
7.	Message Passing: Objects communicate and interact by sending messages to each other, invoking methods and exchanging data.
What is Java Package and which package is imported by default?
Answer: Java Package: Mechanism for organizing classes and interfaces.
         Default Package: java.lang.
What is an API? List some API's that you have used so far.
Answer: API: Application Programming Interface for software communication, example:GitHub API,Google Maps API...
Does java support multiple inheritance? Why or why not?
Answer: No, Java does not support multiple inheritance, Why: to avoid the complications and ambiguities that can arise from inheriting multiple implementations and conflicting method definitions from multiple parent classes.
What is method overloading? List all of different ways to overload?
Answer:Overloading method is creating multiple methods with the same name but different parameters.
 List of different ways to overload are:1.	Different number of parameters.
                                        2.	Different data types of parameters.
                                        3.	Different order of parameters.
                                        4.	Different return types.
Explain exceptions in java and how to handle them.
Answer: Exceptions in Java: Events that disrupt normal program flow due to errors or exceptional conditions.
        Handling Exceptions: Use try-catch blocks to catch and handle exceptions, also block can be used to execute code regardless of exceptions.
What is static keyword? When and how do we use it?
Answer: Static keyword used to declare class-level members (variables or methods) that are shared among all instances.
Usage: For variables, it creates a single copy shared by all instances. For methods, it allows calling without creating an instance or accessing instance-specific data.
What is final keyword? When and how do we use it?
Answer:Final keyword:Indicates immutability or restrictions on modification or inheritance.
Usage: Final variable: Create a constant value.
       Final method: Prevent method overriding.
       Final class: Prevent class inheritance.
Explain the difference between final, finally and finalize?
Answer:
1-Final: Keyword used in Java to declare a variable, method, or class that cannot be modified, overridden, or extended.
2-Finally: Block of code used in a try-catch-finally structure to ensure certain code executes regardless of whether an exception is thrown or caught.
3-Finalize: Method in Java's Object class used for object cleanup operations before garbage collection.
What is a constructor?
Answer:
 is a special method in a class used for initializing objects of that class. It is called automatically when an object is created and is responsible for initializing the object's state.

Can we have multiple constructors in a class?
Answer:
 -Yes, it is possible to have multiple constructors in a class.

If we don't have a constructor declared, what is called during the object creation?
Answer:
If a class does not have a constructor declared, a default constructor is automatically provided by the programming language.
What is "this" keyword in Java? When would we use it?
Answer:
The "this" keyword in Java refers to the current instance of a class and is used to differentiate between instance variables and method parameters or local variables with the same name.

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:
-The "super" keyword in Java is used to refer to the superclass (parent class) and is primarily used in scenarios where we need to access superclass members, invoke superclass constructors, or override superclass methods in a subclass.

What does JVM stand for?
Answer:JVM stands for Java Virtual Machine.

Is JVM platform independent?
Answer:Yes, JVM (Java Virtual Machine) is platform independent.

What version of Java are you using?
Answer:java 17.

What does JAR stand for?
Answer:JAR stands for Java Archive.

What is the difference between JDK and JVM?
Answer:JDK (Java Development Kit) is a software development kit that includes tools and libraries for developing Java applications, while JVM (Java Virtual Machine) is a runtime environment that executes Java bytecode. JDK is used for developing Java applications, while JVM is responsible for running Java applications on different platforms.

What is the difference between JVM and JRE?
Answer: JVM (Java Virtual Machine) is the runtime environment that executes Java bytecode, while JRE (Java Runtime Environment) is a package that includes JVM along with libraries and other components required to run Java applications. JRE provides the necessary runtime environment for executing Java applications, while JVM is the core component responsible for executing the bytecode.

Explain the difference between compile-time and run-time?
Answer: -Compile-time:During compilation,the source code is converted into machine-readable instructions and checked for errors.
        -Run-time:The compiled code is executed,and the program performs its intended operations.

What is heap?
Answer: The heap is a region of memory used for dynamic memory allocation in a program. It is where objects and data structures are allocated during runtime.

How does Java manage its memory?
Answer: Java manages its memory using automatic memory management through a technique called garbage collection. The Java Virtual Machine (JVM) automatically allocates and deallocates memory for objects based on their usage and lifespan, freeing developers from manual memory management tasks.

What is the difference between String, StringBuffer and StringBuilder?
Answer: String is immutable, StringBuffer is mutable and thread-safe, while StringBuilder is mutable but not thread-safe.

What is Singleton class?
Answer: A Singleton class is a design pattern that allows the creation of only one instance (object) of a class throughout the application. It ensures that a class has only one instance and provides a global point of access to that instance.

What is Serialization and Deserialization?
Answer:serialization is the process of converting an object into a byte stream, and deserialization is the process of reconstructing an object from that byte stream.

Explain the difference between While and Do..While loops?
Answer: while loop checks the condition at the beginning and may not execute the loop at all, while do..while loop executes the loop body at least once before checking the condition.

What is Enum?
Answer:An enum, short for enumeration, is a special data type in programming languages that represents a set of predefined named values

What is Iterator?
Answer:An Iterator is an interface that provides a way to iterate over a collection of elements sequentially.

Which one will take more memory: an int or Integer? Why?
Answer: -An int takes less memory than an Integer because int is a primitive type that directly stores the value, while Integer is an object wrapper class that adds additional overhead for storing the value and providing additional functionalities.

Why are Strings considered to be immutable in Java?
Answer: Strings are considered immutable in Java because once a string object is created, its value cannot be changed. In other words, you cannot modify the contents of an existing string object. This immutability ensures string objects are thread-safe and can be safely shared across multiple threads without the risk of unexpected modifications.

What is constructor chaining in Java?
Answer: Constructor chaining in Java refers to the process of calling one constructor from another constructor in the same class or in the superclass.

The difference between Serial and Parallel Garbage Collector?
Answer: -Serial garbage collector operates in a single thread, pausing the application during garbage collection, while the parallel garbage collector utilizes multiple threads to perform garbage collection concurrently with the application, potentially reducing pause times.

What does JIT stand for?
Answer: JIT stands for Just-In-Time.

Explain the process of Java garbage collection?
Answer:-Java garbage collection is the automatic process of reclaiming memory occupied by objects that are no longer referenced and considered garbage. It involves marking reachable objects, sweeping and reclaiming memory, and optionally compacting memory to reduce fragmentation.

Can you guarantee the garbage collection process?
Answer:No.

What is the difference between stack and heap in Java?
Answer: stack is used for storing local variables and method call information, while the heap is used for dynamically allocating and managing objects during runtime.

What is reflection in Java and why is it useful?
Answer:-Reflection in Java allows dynamic examination and modification of class structure, methods, and fields at runtime. It is useful for tasks like introspection, dynamic instantiation, and method invocation.

What is multithreading in Java?
Answer: Multithreading in Java is the ability of a program to execute multiple threads concurrently, allowing multiple tasks or processes to run simultaneously within a single program.

What is synchronization in Java?
Answer: Synchronization in Java is a mechanism that allows multiple threads to coordinate and access shared resources in a mutually exclusive manner. It ensures that only one thread can access the synchronized code block or method at a time, preventing data races and maintaining consistency when multiple threads are modifying shared data.

What is a Framework?
Answer:A framework is a reusable software infrastructure that provides a structure and pre-defined functionalities for building applications.

What are the testing Frameworks available in Java?
Answer:-JUnit, TestNG, Mockito, Selenium, Cucumber, Arquillian.

What are jUnit and testNG?
Answer:  are both popular testing frameworks for Java.

What are the dependencies for this project?
Answer:-depend on its requirements and the libraries chosen by the project developers.

What is dependency injection in Java?
Answer:is a design pattern that injects dependencies into a class from the outside, promoting loose coupling and improving code modularity.

Explain what static binding and dynamic binding is?
Answer:-Static binding occurs during compile-time and refers to binding a method or function call based on the static type of the object.
-Dynamic binding occurs during runtime and refers to binding a method or function call based on the actual type of the object at runtime.
