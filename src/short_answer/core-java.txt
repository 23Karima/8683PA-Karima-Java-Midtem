***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer:A programming language is a system of rules for writing instructions that computers can understand and execute.

What is a JDK composed of? Define each component?
Answer:
1.  Java Compiler (javac): Converts Java source code into bytecode that can be executed by the JVM.
2.  Java Virtual Machine (JVM): Executes Java bytecode and provides platform independence and memory management.
3.  Java Runtime Environment (JRE): Includes the JVM and libraries required to run Java applications.
4.  Development Tools: Tools like javac (Java compiler), java (launches Java applications), javadoc (generates HTML documentation), and jar (packs Java files into archives).
What is an IDE?
Answer: An IDE stands for Integrated Development Environment. It is a software application that provides a comprehensive set of tools and features to assist developers in writing, testing, and debugging code
An IDE is a software tool that helps programmers write and manage their code effectively.
What are some of the most popular Java IDEs available in the market?
Answer:
1.	Eclipse
2.	IntelliJ IDEA
3.	NetBeans
4.	Visual Studio Code (VS Code)
5.	JDeveloper
6.	BlueJ
7.	jGRASP
Explain the entire java life cycle.
Answer:
1.	Write Code: using a text editor or an Integrated Development Environment (IDE).
2.	Compile:  using the Java compiler (javac) into bytecode.
3.	Load: The Java Virtual Machine (JVM) loads the bytecode into memory.
4.	Verify: The JVM verifies the bytecode for security.
5.	Execute: The JVM interprets and executes the bytecode instructions line by line.
6.	Garbage Collection: The JVM automatically manages memory by performing garbage collection, which reclaims memory occupied by objects that are no longer in use.
7.	Exception Handling: During execution, if an exception occurs, the JVM catches and handles it according to the exception handling mechanism specified in the code.
8.	Terminate: The program execution ends either when it reaches the end of the main method or when a specific termination condition is met.
What is a class?
Answer:
A class is a blueprint for objects, defining their structure, behavior, and data encapsulation.
What is an object?
Answer:
An object is an instance of a class, representing a specific entity or concept with its own state and behavior.
What is the entry point of a Java project?
Answer:
The entry point of a Java project is the main() method, which is the starting point for program execution.
Why is the main() method static?
Answer:
The main() method is static in Java to allow it to be called without requiring an instance of the class.
Which class is the superclass of all classes?
Answer:
The superclass of all classes in Java is the Object class.
What is difference between path and classpath variables?
Answer:
The "path" variable is used by the operating system to find executables, while the "classpath" variable is used by the JVM to find Java class files.
What is the difference between an Interface and Abstract class?
Answer:
Interface: Collection of abstract methods and constant fields, can be implemented by multiple classes.
Abstract Class: Class with abstract and non-abstract methods, can be extended by a single subclass.
Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:

What is Access Modifier?
Answer:

What is OOP? Define each OOP concept.
Answer:

What is Java Package and which package is imported by default?
Answer:

What is an API? List some API's that you have used so far.
Answer:

Does java support multiple inheritance? Why or why not?
Answer:

What is method overloading? List all of the different ways to overload.
Answer:

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer:

What is final keyword? When and how do we use it?
Answer:

Explain the difference between final, finally and finalize?
Answer:

What is a constructor?
Answer:

Can we have multiple constructors in a class?
Answer:

If we don't have a constructor declared, what is called during the object creation?
Answer:

What is "this" keyword in Java? When would we use it?
Answer:

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:

What does JVM stand for?
Answer:

Is JVM platform independent?
Answer:

What version of Java are you using?
Answer:

What does JAR stand for?
Answer:

What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:

Explain the difference between compile-time and run-time?
Answer:

What is heap?
Answer:

How does Java manage its memory?
Answer:

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:
What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer:
